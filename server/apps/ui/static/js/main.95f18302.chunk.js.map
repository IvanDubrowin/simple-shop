{"version":3,"sources":["constants/shop.js","components/Header/Header.jsx","components/Footer/Footer.jsx","components/Carousel/Carousel.jsx","constants/api.js","services/api/base.js","services/api/shop.js","redux/reducers/cart-reducer.js","components/Content/Content.jsx","redux/reducers/products-reducer.js","components/Shop/Products.jsx","components/Errors/Error.jsx","components/Shop/Categories.jsx","components/Shop/Shop.jsx","components/Cart/CartItem.jsx","components/Cart/Cart.jsx","services/api/uiConfig.js","redux/reducers/config-reducer.js","redux/reducers/categories-reducer.js","components/Preloader/Preloader.jsx","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["DEFAULT_IMAGE","window","location","origin","currencyFormatter","Intl","NumberFormat","style","currency","useStyles","makeStyles","theme","headerWrapper","paddingRight","toolBar","display","justify","titleWrapper","flexGrow","titleButton","color","fontWeight","fontSize","navButton","cartIcon","HideOnScroll","children","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","connect","state","title","get","firstCategory","cartTotalPrice","classes","history","useHistory","routeHandler","url","push","Fragment","AppBar","className","Toolbar","Button","onClick","Typography","variant","id","IconButton","disabled","Badge","badgeContent","format","max","showZero","stickToBottom","backgroundColor","grey","textAlign","minHeight","padding","flexShrink","footerItem","margin","phoneNumber","email","instagram","vk","Grid","container","alignItems","paddingLeft","href","width","height","imageContainer","firstImage","secondImage","autoPlay","infiniteLoop","showThumbs","showStatus","interval","src","alt","BASE_API_URL","API","axios","create","baseURL","withCredentials","responseType","loadCategories","a","res","data","loadProducts","categoryId","page","loadCart","addToCart","productId","count","post","product","deleteProductInCart","delete","createOrder","name","phone_number","initialState","Map","totalPrice","items","orderCreated","addToCartAction","item","type","payload","deleteProductAction","getTotalPrice","cartData","reduce","total","parseFloat","price","addMany","dispatch","map","addCartItem","cartReducer","action","setIn","image","deleteIn","set","contentWrapper","flexDirection","successOrder","text","clearCart","React","useState","open","setOpen","handleClose","event","reason","dangerouslySetInnerHTML","__html","Snackbar","onClose","autoHideDuration","props","elevation","severity","results","List","setProductsAction","fetchProducts","productsReducer","merge","fromJS","boxShadow","paddingTop","addCartButton","palette","secondary","main","descriptionButton","pagination","icon","ProductIcons","isRecommend","isTop","Tooltip","Product","description","cartItems","expanded","setExpanded","inCart","lg","md","sm","xs","Card","CardMedia","CardContent","gutterBottom","component","CardActions","aria-expanded","Collapse","timeout","unmountOnExit","paragraph","productCount","currentPage","pagesCount","Math","ceil","pageChange","value","products","Pagination","onChange","size","ErrorWrapper","position","left","top","transform","maxWidth","lineHeight","paddingBottom","Error","ErrorH1","fontFamily","textTransform","letterSpacing","marginLeft","textShadow","ErrorH3","prettyCode","code","split","char","categoryItem","CategoryItem","isCurrent","currentCategory","Fab","categories","category","match","params","includes","Categories","Products","counter","minWidth","flex","resizeMode","priceCell","CartItemCounter","deleteCartItem","ButtonGroup","TableRow","key","TableCell","cartContainer","marginTop","marginBottom","orderModal","justifyContent","orderForm","background","paper","spacing","setOrderCreated","handleOpenOrderForm","handleCloseOrderForm","PhoneMask","inputRef","other","ref","inputElement","mask","placeholderChar","showMask","xl","zeroMinWidth","TableContainer","Table","TableHead","colSpan","TableBody","values","TableFooter","align","setName","setPhoneNumber","setEmail","errors","setErrors","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","TextField","label","error","helperText","first","required","InputProps","inputComponent","replace","then","catch","response","status","loadUiConfig","initialized","carousel","contact_info","content","setUiConfigAction","uiConfigReducer","setFirstCategoryAction","setCategoriesAction","categoriesReducer","spinner","Preloader","CircularProgress","disableShrink","createMuiTheme","primary","typography","mainWrapper","getUiConfig","configData","getCategories","getCartData","ThemeProvider","exact","path","Content","Shop","Cart","render","rootReducer","combineReducers","config","cart","store","createStore","compose","applyMiddleware","thunkMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"4WAIaA,EAFW,UAAMC,OAAOC,SAASC,OAAtB,2BCYlBC,EAAoB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAElFC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,cAAe,CACXC,aAAc,QAElBC,QAAS,CACLC,QAAS,OACTC,QAAS,gBAEbC,aAAc,CACVC,SAAU,GAEdC,YAAa,CACTC,MAAO,QACPC,WAAY,OACZC,SAAU,SAEdC,UAAW,CACPH,MAAO,QACPC,WAAY,OACZC,SAAU,SAEdE,SAAU,CACNJ,MAAO,QACPE,SAAU,aAIZG,EAAe,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUzB,EAAa,EAAbA,OAExB0B,EAAUC,YAAiB,CAAEC,OAAQ5B,EAASA,SAAW6B,IAE/D,OACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKP,GACvCD,IA8FES,eARS,SAAAC,GACpB,MAAO,CACHC,MAAOD,EAAME,IAAI,UAAUA,IAAI,SAC/BC,cAAeH,EAAME,IAAI,cAAcA,IAAI,iBAC3CE,eAAgBJ,EAAME,IAAI,QAAQA,IAAI,iBAI/BH,EAzFA,SAAC,GAA8C,IAA5CE,EAA2C,EAA3CA,MAAOE,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAE9BC,EAAUhC,IAEViC,EAAUC,cAEVC,EAAe,SAAAC,GAAG,OAAIH,EAAQI,KAAKD,IAyDzC,OACI,kBAAC,IAAME,SAAP,KACI,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,UAAWR,EAAQ7B,eACvB,kBAACsC,EAAA,EAAD,CAASD,UAAWR,EAAQ3B,SACxB,mBA5DN,SAAC,GAAD,IAAGuB,EAAH,EAAGA,MAAH,OACV,yBAAKY,UAAWR,EAAQxB,cACpB,kBAACkC,EAAA,EAAD,CACIF,UAAWR,EAAQtB,YACnBiC,QAAS,kBAAMR,EAAa,OAC5B,kBAACS,EAAA,EAAD,CAAYC,QAAQ,MACfjB,OAsDG,CAAOA,MAAOA,IACd,mBAjDD,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,cAClB,GAAIA,EAAe,CAEf,IAAMgB,EAAKhB,EAAcD,IAAI,MAEvBO,EAAG,2BAAuBU,GAEhC,OACI,kBAAC,IAAMR,SAAP,KACI,kBAACI,EAAA,EAAD,CACIF,UAAWR,EAAQlB,UACnB6B,QAAS,kBAAMR,EAAaC,KAC5B,kBAACQ,EAAA,EAAD,qDAOhB,OAAO,OA8BS,CAAYd,cAAeA,IAC3B,mBA5BH,SAAC,GAAuC,IAArCA,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAC/B,OAAID,EAEI,kBAACiB,EAAA,EAAD,CACIJ,QAAS,kBAAMR,EAAa,UAC5Ba,SAA6B,IAAnBjB,GAEV,kBAACkB,EAAA,EAAD,CACIC,aAAcvD,EAAkBwD,OAAOpB,GACvCpB,MAAM,YACNyC,IDlGY,UCmGZC,UAAQ,GAER,kBAAC,IAAD,CAAuBb,UAAWR,EAAQjB,aAKnD,OAUS,CACIe,cAAeA,EACfC,eAAgBA,W,iFClHtC/B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCoD,cAAe,CACXC,gBAAiBC,IAAK,KACtBC,UAAW,SACXC,UAAW,OACXC,QAAS,OACTC,WAAY,GAEhBC,WAAY,CACRC,OAAQ,WAuFDpC,eATS,SAAAC,GACpB,MAAQ,CACJoC,YAAapC,EAAME,IAAI,UAAUA,IAAI,gBAAgBA,IAAI,gBACzDmC,MAAOrC,EAAME,IAAI,UAAUA,IAAI,gBAAgBA,IAAI,SACnDoC,UAAWtC,EAAME,IAAI,UAAUA,IAAI,gBAAgBA,IAAI,aACvDqC,GAAIvC,EAAME,IAAI,UAAUA,IAAI,gBAAgBA,IAAI,SAIzCH,EAnFA,SAAC,GAA2C,IAAzCqC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAEvClC,EAAUhC,IA8BhB,OACI,4BAAQwC,UAAWR,EAAQsB,eACvB,kBAACa,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,SACV6C,WAAW,UAEX,kBAACF,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,MACVjB,QAAQ,SACRiC,UAAWR,EAAQ6B,YAEnB,kBAAC,IAAD,MACA,kBAACjB,EAAA,EAAD,CAAY9C,MAAO,CAACwE,YAAa,QAC5BP,IAGT,kBAACI,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,MACVjB,QAAQ,SACRiC,UAAWR,EAAQ6B,YAEnB,kBAAC,IAAD,MACA,kBAACjB,EAAA,EAAD,CAAY9C,MAAO,CAACwE,YAAa,QAC5BN,IAGT,kBAACG,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,MACVjB,QAAQ,UAER,mBA9DC,WACb,MAAW,KAAP2D,EAEA,kBAACnB,EAAA,EAAD,CACIpC,MAAM,UACNgC,QAAS,kBAAMnD,OAAOC,SAAS8E,KAAOL,IAEtC,kBAAC,IAAD,CAAQM,MAAO,GAAIC,OAAQ,MAI5B,OAmDK,MACA,mBAjDQ,WACpB,MAAkB,KAAdR,EAEA,kBAAClB,EAAA,EAAD,CACIpC,MAAM,UACNgC,QAAS,kBAAMnD,OAAOC,SAAS8E,KAAON,IAEtC,kBAAC,IAAD,CAAeO,MAAO,GAAIC,OAAQ,MAInC,OAsCK,Y,0BCtFdzE,G,OAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCwE,eAAgB,CACZD,OAAQ,aAiCD/C,eAPS,SAAAC,GACpB,MAAO,CACHgD,WAAYhD,EAAME,IAAI,UAAUA,IAAI,YAAYA,IAAI,eACpD+C,YAAajD,EAAME,IAAI,UAAUA,IAAI,YAAYA,IAAI,mBAI9CH,EA7BS,SAAC,GAAiC,IAA/BiD,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAE7B5C,EAAUhC,IAEhB,OACI,kBAAC,IAAD,CACI6E,UAAU,EACVC,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,SAAU,KAEV,yBAAKzC,UAAWR,EAAQ0C,gBACpB,yBAAKQ,IAAKP,EAAYQ,IAAI,MAE9B,yBAAK3C,UAAWR,EAAQ0C,gBACpB,yBAAKQ,IAAKN,EAAaO,IAAK,U,oECxB/BC,GAFK,UAAM5F,OAAOC,SAASC,OAAtB,SCCL2F,GAAMC,IAAMC,OAAO,CAC5BC,QAASJ,GACTK,iBAAiB,EACjBC,aAAc,SCHLC,GAAc,uCAAG,4BAAAC,EAAA,sEACRP,GAAIxD,IFIS,eELL,cACpBgE,EADoB,yBAEnBA,EAAIC,MAFe,2CAAH,qDAKdC,GAAY,uCAAG,WAAOC,EAAYC,GAAnB,iBAAAL,EAAA,6DAClBxD,EADkB,UFAO,eEAP,OACa4D,GADb,OFII,cEJJ,OFMR,UENQ,OACoDC,GADpD,SAENZ,GAAIxD,IAAIO,GAFF,cAElByD,EAFkB,yBAGjBA,EAAIC,MAHa,2CAAH,wDAMZI,GAAQ,uCAAG,4BAAAN,EAAA,sEACFP,GAAIxD,IFLG,SEIL,cACdgE,EADc,yBAEbA,EAAIC,MAFS,2CAAH,qDAKRK,GAAS,uCAAG,WAAOC,EAAWC,GAAlB,eAAAT,EAAA,sEACHP,GAAIiB,KFVG,QEUiB,CAAEC,QAASH,EAAWC,UAD3C,cACfR,EADe,yBAEdA,EAAIC,MAFU,2CAAH,wDAKTU,GAAmB,uCAAG,WAAM1D,GAAN,SAAA8C,EAAA,sEAAkBP,GAAIoB,OAAJ,UFdxB,SEcwB,OAA8B3D,EAA9B,MAAlB,mFAAH,sDAEnB4D,GAAW,uCAAG,WAAMC,EAAM5C,EAAaC,GAAzB,iBAAA4B,EAAA,6DACjBxD,EADiB,UFhBE,SEgBF,OFVC,iBEUD,SAELiD,GAAIiB,KAAKlE,EAAK,CAAEuE,OAAMC,aAAc7C,EAAaC,UAF5C,cAEjB6B,EAFiB,yBAGhBA,EAAIC,MAHY,2CAAH,0DCfpBe,GAAeC,cAAI,CACnBC,WAAY,EACZC,MAAOF,gBACPG,cAAc,IAGZC,GAAkB,SAAAC,GAAI,MAAK,CAC7BC,KAfgB,cAgBhBC,QAASF,IAGPG,GAAsB,SAAAlB,GAAS,MAAK,CACtCgB,KAlBgB,cAmBhBC,QAASjB,IAWPmB,GAAgB,SAAAC,GAClB,OAAOA,EAASC,QACZ,SAACC,EAAOP,GAAR,OAAiBQ,WAAWD,EAASP,EAAKd,MAAQc,EAAKS,SACvDf,GAAahF,IAAI,gBAInBgG,GAAU,SAACC,EAAUN,GAAX,OAAwBA,EAASO,KAAI,SAAAZ,GAAI,OAAIW,EAASZ,GAAgBC,QAOzEa,GAAc,SAAC5B,EAAWC,GAAZ,8CAAsB,WAAMyB,GAAN,eAAAlC,EAAA,sEAC1BO,GAAUC,EAAWC,GADK,OACvCc,EADuC,OAE7CW,EAASZ,GAAgBC,IAFoB,2CAAtB,uDA4CZc,GA9BK,WAAmC,IAAlCtG,EAAiC,uDAAzBkF,GAAcqB,EAAW,uCAClD,OAAQA,EAAOd,MACX,IA9DY,cA+DR,IAAMD,EAAOe,EAAOb,QAUpB,OATA1F,EAAQA,EAAMwG,MACV,CAAC,QAAUhB,EAAKZ,SAAU,CACtBzD,GAAIqE,EAAKrE,GACTlB,MAAOuF,EAAKvF,MACZgG,MAAOD,WAAWR,EAAKS,OACvBQ,MAAOjB,EAAKiB,MACZ/B,MAAOc,EAAKd,SAGP8B,MAAM,CAAC,cAAeZ,GAAc5F,EAAME,IAAI,WAE/D,IAzEY,cA2ER,OADAF,EAAQA,EAAM0G,SAAS,CAAC,QAASH,EAAOb,WAC3Bc,MAAM,CAAC,cAAeZ,GAAc5F,EAAME,IAAI,WAE/D,IA3EW,aA4EP,OAAOgF,GAEX,IA5Ea,eA6ET,OAAOlF,EAAM2G,IAAI,gBAAgB,GAErC,QACI,OAAO3G,ICjFb3B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqI,eAAgB,CACZjI,QAAS,OACTkI,cAAe,SACf7E,QAAS,OAEb8E,aAAc,CACVjE,MAAO,YA2DA9C,gBAPS,SAAAC,GACpB,MAAQ,CACJ+G,KAAM/G,EAAME,IAAI,UAAUA,IAAI,WAAWA,IAAI,QAC7CoF,aAActF,EAAME,IAAI,QAAQA,IAAI,mBAIJ,CAAE8G,UDfjB,yDAAM,WAAMb,GAAN,SAAAlC,EAAA,+EAAkBkC,EAhClB,CAC3BV,KArBe,gBAoDY,2CAAN,wDCeV1F,EAvDC,SAAC,GAAuC,IAArCgH,EAAoC,EAApCA,KAAMzB,EAA8B,EAA9BA,aAAc0B,EAAgB,EAAhBA,UAE7B3G,EAAUhC,KAFmC,EAI3B4I,IAAMC,UAAS,GAJY,mBAI5CC,EAJ4C,KAItCC,EAJsC,KAM7CC,EAAc,SAACC,EAAOC,GACP,cAAXA,GACFH,GAAQ,IAIZ9B,IAAkB6B,IAClBH,IACAI,GAAQ,IAYZ,OACI,kBAAC,IAAMzG,SAAP,KACI,yBAAKE,UAAWR,EAAQuG,gBACpB,kBAAC,EAAD,MACA,yBAAKY,wBAAyB,CAAEC,OAAQV,MAE5C,kBAACW,EAAA,EAAD,CACIP,KAAMA,EACNQ,QAASN,EACTO,iBAAkB,KAElB,mBApBE,SAAAC,GAAK,OACf,kBAAC,IAAD,eACIC,UAAW,EACX5G,QAAQ,SACRL,UAAWR,EAAQyG,cACfe,MAeA,CACIF,QAASN,EACTU,SAAS,WAFb,4J,yHCnDZ7C,GAAeC,cAAI,CACnBT,MAAO,EACPJ,KAAM,EACN0D,QAASC,mBAGPC,GAAoB,SAACxD,EAAOsD,EAAS1D,GAAjB,MAA2B,CACjDmB,KATiB,eAUjBC,QAAS,CAAEhB,QAAOsD,UAAS1D,UAGlB6D,GAAgB,SAAC9D,EAAYC,GAAb,8CAAsB,WAAM6B,GAAN,mBAAAlC,EAAA,sEACdG,GAAaC,EAAYC,GADX,gBACvCI,EADuC,EACvCA,MAAOsD,EADgC,EAChCA,QACf7B,EAAS+B,GAAkBxD,EAAOsD,EAAS1D,IAFI,2CAAtB,uDAed8D,GAVS,WAAmC,IAAlCpI,EAAiC,uDAAzBkF,GAAcqB,EAAW,uCACtD,OAAQA,EAAOd,MACX,IApBa,eAqBT,OAAOzF,EAAMqI,MAAMC,iBAAO,gBAAK/B,EAAOb,WAE1C,QACI,OAAO1F,ICRbhC,GAAoB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAElFC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqG,QAAS,CACLzC,OAAQ,OACRoG,UAAW,WAEf9B,MAAO,CACH+B,WAAY,QAEhBC,cAAe,CACXtG,OAAQ,MACR,aAAc,CACVnD,MAAOT,EAAMmK,QAAQC,UAAUC,MAEnC/F,MAAO,eAEXgG,kBAAmB,CACf1G,OAAQ,MACRU,MAAO,eAEXiG,WAAY,CACR9G,QAAS,QAEb+G,KAAM,CACF/G,QAAS,MACT9C,SAAU,YAIZ8J,GAAe,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAE3B7I,EAAUhC,KAwBhB,OACI,kBAAC4C,EAAA,EAAD,KACI,mBAxBY,WAChB,OAAIgI,EAEI,kBAACE,GAAA,EAAD,CAAStI,UAAWR,EAAQ0I,KAAM9I,MAAM,kFACpC,kBAAC,KAAD,OAIL,OAgBH,MACA,mBAdM,WACV,OAAIiJ,EAEI,kBAACC,GAAA,EAAD,CAAStI,UAAWR,EAAQ0I,KAAM9I,MAAM,sBACpC,kBAAC,KAAD,OAIL,OAMH,QAKNmJ,GAAU,SAAC,GAUV,IATH3E,EASE,EATFA,UACAxE,EAQE,EARFA,MACAgJ,EAOE,EAPFA,YACAC,EAME,EANFA,MACAjD,EAKE,EALFA,MACAoD,EAIE,EAJFA,YACA5C,EAGE,EAHFA,MACAJ,EAEE,EAFFA,YACAiD,EACE,EADFA,UAGMjJ,EAAUhC,KAFd,EAI8B4I,IAAMC,UAAS,GAJ7C,mBAIKqC,EAJL,KAIeC,EAJf,KAMIC,IAASH,EAAUpJ,IAAIuE,GAM7B,OACI,kBAACjC,EAAA,EAAD,CAAMgD,MAAI,EAACkE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACjC,kBAACC,GAAA,EAAD,CAAMjJ,UAAWR,EAAQuE,SACrB,kBAACmF,GAAA,EAAD,CACIlJ,UAAWR,EAAQoG,MACnBA,MAASA,GAAS7I,IAEtB,kBAACoM,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,CAAYgJ,cAAY,EAAC/I,QAAQ,KAAKgJ,UAAU,MAC3CjK,GAEL,kBAACgB,EAAA,EAAD,CAAYiJ,UAAU,KAClB,4BAAKlM,GAAkBwD,OAAOyE,KAElC,kBAAChF,EAAA,EAAD,KACI,kBAAC,GAAD,CAAcgI,YAAaA,EAAaC,MAAOA,MAGvD,kBAAC1G,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,MACVjB,QAAQ,YAER,kBAACuL,GAAA,EAAD,KACI,kBAACpJ,EAAA,EAAD,CACIF,UAAWR,EAAQwI,kBACnB7H,QA9BE,WACtBwI,GAAaD,IA8BOa,gBAAeb,EACflI,SAA0B,KAAhBgI,EACVnI,QAAQ,WACRlC,MAAM,WAEN,kBAACiC,EAAA,EAAD,0DAIJ,kBAACF,EAAA,EAAD,CACIF,UAAWR,EAAQoI,cACnBzH,QAAS,kBAAMqF,EAAY5B,EAAW,IACtCpD,WAAUoI,EACVvI,QAAQ,WACRlC,MAAM,WAEN,kBAACiC,EAAA,EAAD,KACKwI,EAAS,oDAAc,wDAKxC,kBAACY,GAAA,EAAD,CAAUvK,GAAIyJ,EAAUe,QAAQ,OAAOC,eAAa,GAChD,kBAACP,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,CAAYuJ,WAAS,GAChBnB,QAoFdtJ,gBATS,SAAAC,GACpB,MAAQ,CACJgI,QAAShI,EAAME,IAAI,YAAYA,IAAI,WACnCuK,aAAczK,EAAME,IAAI,YAAYA,IAAI,SACxCwK,YAAa1K,EAAME,IAAI,YAAYA,IAAI,QACvCoJ,UAAWtJ,EAAME,IAAI,QAAQA,IAAI,YAID,CAAEiI,iBAAe9B,gBAA1CtG,EA3EM,SAAC,GAQf,IAPHiI,EAOE,EAPFA,QACA3D,EAME,EANFA,WACA8D,EAKE,EALFA,cACA9B,EAIE,EAJFA,YACAoE,EAGE,EAHFA,aACAC,EAEE,EAFFA,YACApB,EACE,EADFA,UAGMjJ,EAAUhC,KAEVsM,EAAaC,KAAKC,KAAKJ,EV5KA,IU8KvBK,EAAa,SAACxD,EAAOyD,GACjBA,IAAUL,GACZvC,EAAc9D,EAAY0G,IAoB5BC,EAAWhD,EAAQ5B,KACrB,SAAAxB,GAAO,OACH,kBAAC,GAAD,CACIH,UAAWG,EAAQ1E,IAAI,MACvBD,MAAO2E,EAAQ1E,IAAI,SACnB+I,YAAarE,EAAQ1E,IAAI,gBACzBgJ,MAAOtE,EAAQ1E,IAAI,UACnB+F,MAAOrB,EAAQ1E,IAAI,SACnBmJ,YAAazE,EAAQ1E,IAAI,eACzBuG,MAAO7B,EAAQ1E,IAAI,SACnBmG,YAAaA,EACbiD,UAAWA,OAKvB,OACI,kBAAC,IAAM3I,SAAP,KACKqK,EACD,kBAACxI,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,MACVjB,QAAQ,UAER,mBAxCe,WACvB,OAAI+L,EAAa,EAET,kBAACM,GAAA,EAAD,CACIpK,UAAWR,EAAQyI,WACnBpE,MAAOiG,EACPrG,KAAMoG,EACNQ,SAAUJ,EACV9L,MAAM,UACNmM,KAAK,UAIV,OA2BC,WC/NV9M,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC6M,aAAc,CACVC,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXC,SAAU,QACV5I,MAAO,OACP6I,WAAY,MACZ5J,UAAW,SACX6J,cAAe,QACfhJ,YAAa,QAEjBiJ,MAAO,CACHP,SAAU,WACVvI,OAAQ,SAEZ+I,QAAS,CACLC,WAAY,2BACZT,SAAU,WACVC,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXtM,SAAU,QACVD,WAAY,IACZkD,OAAQ,MACRnD,MAAO,UACP+M,cAAe,YACfC,cAAe,QACfC,WAAY,QACZ,WAAY,CACRC,WAAY,sBAGpBC,QAAS,CACLL,WAAY,sBACZT,SAAU,WACVnM,SAAU,OACVD,WAAY,IACZ8M,cAAe,YACf/M,MAAO,UACPmD,OAAQ,MACR6J,cAAe,WAyBRJ,GApBD,SAAC,GAAoB,IAAlB7E,EAAiB,EAAjBA,KAEPqF,GAAc,GAFU,EAAXC,MAEUC,MAAM,IAAIlG,KAAI,SAAAmG,GAAI,OAAI,8BAAOA,MAEpDlM,EAAUhC,KAEhB,OACI,yBAAKwC,UAAWR,EAAQ+K,cACpB,yBAAKvK,UAAWR,EAAQuL,OACpB,wBAAI/K,UAAWR,EAAQ8L,SAClBpF,GAEL,wBAAIlG,UAAWR,EAAQwL,SAClBO,M,UCzDf/N,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCiO,aAAc,CACVrK,OAAQ,WAIVsK,GAAe,SAAC,GAAoC,IAAlCtL,EAAiC,EAAjCA,GAAIlB,EAA6B,EAA7BA,MAElByM,GAF+C,EAAtBC,mBAESxL,EAElCd,EAAUhC,KAEViC,EAAUC,cAIhB,OACI,kBAACqM,GAAA,EAAD,CAAK1L,QAAQ,WACRiK,KAAK,SACLnM,MAAO0N,EAAY,YAAc,UACjC7L,UAAWR,EAAQmM,aACnBxL,QAAS,kBAPGP,EAOgB,oBAAD,OAAqBU,GAP7Bb,EAAQI,KAAKD,GAApB,IAAAA,IASZR,IAwBEF,gBANS,SAAAC,GACpB,MAAQ,CACJqF,MAAOrF,EAAME,IAAI,cAAcA,IAAI,YAI5BH,EAnBQ,SAAC,GAAgC,IAA9B4M,EAA6B,EAA7BA,gBAChBE,EAD6C,EAAZxH,MACde,KACrB,SAAA0G,GAAQ,OACJ,kBAAC,GAAD,CACI3L,GAAI2L,EAAS5M,IAAI,MACjBD,MAAO6M,EAAS5M,IAAI,SACpByM,gBAAiBA,OAI7B,OAAO,kBAAC,IAAMhM,SAAP,KAAiBkM,MCAb9M,gBANS,SAAAC,GACpB,MAAQ,CACJ6M,WAAY7M,EAAME,IAAI,cAAcA,IAAI,YAIR,CAAEiI,kBAA3BpI,EApCF,SAAC,GAA0C,IAAxCgN,EAAuC,EAAvCA,MAAO5E,EAAgC,EAAhCA,cAAe0E,EAAiB,EAAjBA,WAE5BxI,EAAa0I,EAAMC,OAAO7L,GAMhC,OAJyB0L,EAAWzG,KAAI,SAAAZ,GAAI,OAAIA,EAAKtF,IAAI,SAEb+M,UAAU5I,IAMtD8D,EAAc9D,EAAY,GAGtB,kBAAC7B,EAAA,EAAD,CACIC,WAAS,EACT5C,UAAU,SACV6C,WAAW,cAEX,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAAC5C,UAAU,MAAMjB,QAAQ,cACpC,kBAACsO,GAAD,CAAgBP,gBAAiBtI,KAErC,kBAAC7B,EAAA,EAAD,CAAMC,WAAS,EAAC5C,UAAU,MAAMjB,QAAQ,UACpC,kBAACuO,GAAD,CAAc9I,WAAYA,OAf3B,kBAAC,GAAD,CAAO0C,KAAK,+HAA2BsF,KAAM,S,sLCLtDrO,GAAoB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAElFC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC6O,QAAS,CACL,aAAc,CACVpO,MAAOT,EAAMmK,QAAQ7G,KAAK,MAE9BwL,SAAU,IAEd5G,MAAO,CACH6G,KAAM,EACNzK,MAAO,GACPC,OAAQ,GACRyK,WAAY,WAEhBC,UAAW,CACPH,SAAU,IACV5B,SAAU,SAIZgC,GAAkB,SAAC,GAAuD,IAArD/I,EAAoD,EAApDA,MAAOD,EAA6C,EAA7CA,UAAW4B,EAAkC,EAAlCA,YAAaqH,EAAqB,EAArBA,eAEhDrN,EAAUhC,KAchB,OACI,kBAACsP,GAAA,EAAD,KACI,kBAAC5M,EAAA,EAAD,CAAQC,QAVQ,WAChB0D,EAAQ,EACR2B,EAAY5B,IAAaC,GAEzBgJ,EAAejJ,KAMf,KACA,kBAAC1D,EAAA,EAAD,CAAQF,UAAWR,EAAQ+M,QAAS/L,UAAQ,GAAEqD,GAC9C,kBAAC3D,EAAA,EAAD,CAAQC,QAhBQ,WACpBqF,EAAY5B,IAAaC,KAerB,OA6CG3E,eAAQ,KAAM,CAAEsG,eAAaqH,eP5Cd,SAAAjJ,GAAS,8CAAI,WAAM0B,GAAN,SAAAlC,EAAA,sEACjCY,GAAoBJ,GADa,OAEvC0B,EAASR,GAAoBlB,IAFU,2CAAJ,wDO4CxB1E,EAvCE,SAAC,GAAsD,IAApDyF,EAAmD,EAAnDA,KAAMf,EAA6C,EAA7CA,UAAW4B,EAAkC,EAAlCA,YAAaqH,EAAqB,EAArBA,eAExCrN,EAAUhC,KAEVoI,EAAUjB,EAAKiB,MAAyBjB,EAAKiB,MAArB7I,EAE9B,OACI,kBAACgQ,GAAA,EAAD,CAAUC,IAAKpJ,GACX,kBAACqJ,GAAA,EAAD,KACI,yBAAKvK,IAAKkD,EAAOjD,IAAI,GAAG3C,UAAWR,EAAQoG,SAE/C,kBAACqH,GAAA,EAAD,KACI,kBAAC7M,EAAA,EAAD,KACKuE,EAAKvF,QAGd,kBAAC6N,GAAA,EAAD,CAAWjN,UAAWR,EAAQmN,WACrBxP,GAAkBwD,OAAOgE,EAAKS,QAEvC,kBAAC6H,GAAA,EAAD,KACI,kBAAC,GAAD,CACIpJ,MAAOc,EAAKd,MACZD,UAAWA,EACX4B,YAAaA,EACbqH,eAAgBA,KAGxB,kBAACI,GAAA,EAAD,CAAWjN,UAAWR,EAAQmN,WACzBxP,GAAkBwD,OAAOgE,EAAKS,MAAQT,EAAKd,QAEhD,kBAACoJ,GAAA,EAAD,KACI,kBAAC1M,EAAA,EAAD,CAAYJ,QAAS,kBAAM0M,EAAejJ,KACtC,kBAAC,KAAD,CAA2BvF,SAAS,QAAQF,MAAM,kBCnEhEhB,GAAoB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAElFC,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCwP,cAAe,CACXC,UAAW,OACXC,aAAc,OACdjM,QAAS,OAEbkM,WAAY,CACRvP,QAAS,OACT+D,WAAY,SACZyL,eAAgB,UAEpBC,UAAW,CACPxM,gBAAiBrD,EAAMmK,QAAQ2F,WAAWC,MAC1CtM,QAASzD,EAAMgQ,QAAQ,EAAG,EAAG,GAC7B5P,QAAS,OACTkI,cAAe,SACfnE,WAAY,SACZyL,eAAgB,SAChB,UAAW,CACPhM,OAAQ,QAEZ,aAAc,CACVA,OAAQ,aA2MLpC,gBAPS,SAAAC,GACpB,MAAO,CACHqF,MAAOrF,EAAME,IAAI,QAAQA,IAAI,SAC7BkF,WAAYpF,EAAME,IAAI,QAAQA,IAAI,iBAIF,CAAEsO,gBR9LX,yDAAM,WAAMrI,GAAN,SAAAlC,EAAA,+EAAkBkC,EA9BtB,CAC7BV,KAvBiB,kBAoDgB,2CAAN,wDQ8LhB1F,EAtMF,SAAC,GAA4C,IAA1CsF,EAAyC,EAAzCA,MAAOD,EAAkC,EAAlCA,WAAYoJ,EAAsB,EAAtBA,gBAEzBlO,EAAUC,cAEG,IAAf6E,GACA9E,EAAQI,KAAK,KAGjB,IAAML,EAAUhC,KARqC,EAU7B4I,IAAMC,UAAS,GAVc,mBAU9CC,EAV8C,KAUxCC,EAVwC,KAY/CqH,EAAsB,kBAAMrH,GAAQ,IAEpCsH,EAAuB,kBAAMtH,GAAQ,IAkBrCuH,EAAY,SAAC9G,GAAW,IAElB+G,EAAuB/G,EAAvB+G,SAAaC,EAFI,aAEMhH,EAFN,cAIzB,OACE,kBAAC,KAAD,iBACMgH,EADN,CAEEC,IAAK,SAACA,GACJF,EAASE,EAAMA,EAAIC,aAAe,OAEpCC,KACI,CAAC,IAAK,QAAS,IAAK,QAAS,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,MAErGC,gBAAiB,SACjBC,UAAQ,MAgGV5F,EAAYjE,EAAMe,KAAI,SAAC2E,EAAO8C,GAAR,OAAgB,kBAAC,GAAD,CAAUrI,KAAMuF,EAAOtG,UAAWoJ,OAE9E,OACI,kBAAC,IAAMlN,SAAP,KACI,kBAAC6B,EAAA,EAAD,CACIC,WAAS,EACT5B,UAAWR,EAAQ0N,cACnBlO,UAAU,MACVjB,QAAQ,UAER,kBAAC4D,EAAA,EAAD,CAAMgD,MAAI,EAAC2J,GAAI,EAAGxF,GAAI,GAAIyF,cAAY,GAClC,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC3B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAW0B,QAAS,GAApB,kCACA,kBAAC1B,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,qEACA,kBAACA,GAAA,EAAD,uCACA,kBAACA,GAAA,EAAD,QAGR,kBAAC2B,GAAA,EAAD,kBACSnG,EAAUoG,WAEnB,kBAACC,GAAA,EAAD,KACI,kBAAC7B,GAAA,EAAD,CAAW0B,QAAS,GAChB,kBAACvO,EAAA,EAAD,wEAIJ,kBAAC6M,GAAA,EAAD,KACI,kBAAC7M,EAAA,EAAD,KACKjD,GAAkBwD,OAAO4D,KAGlC,kBAAC0I,GAAA,EAAD,CAAW8B,MAAM,QAAQJ,QAAS,GAC9B,mBAnKZ,SAAC,GACjB,OADoC,EAAjBpK,WACF,EAET,kBAACrE,EAAA,EAAD,CACIG,QAAQ,WACRiK,KAAK,SACLnM,MAAM,UACNgC,QAASyN,GAJb,oDAUD,OAsJqB,CAAarJ,WAAYA,IACzB,mBAjId,WAAO,IAAD,EAEI6B,IAAMC,SAAS,IAFnB,mBAEblC,EAFa,KAEP6K,EAFO,OAIkB5I,IAAMC,SAAS,oBAJjC,mBAIb9E,EAJa,KAIA0N,EAJA,OAMM7I,IAAMC,SAAS,IANrB,mBAMb7E,EANa,KAMN0N,EANM,OAQQ9I,IAAMC,SAAS/B,cAAI,CAC3CH,KAAM,KACNC,aAAc,KACd5C,MAAO,QAXS,mBAQb2N,EARa,KAQLC,EARK,KA8BpB,OACI,kBAACC,GAAA,EAAD,CACIrP,UAAWR,EAAQ6N,WACnB/G,KAAMA,EACNQ,QAAS+G,EACTyB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACXhG,QAAS,MAGb,kBAACiG,GAAA,EAAD,CAAMzQ,GAAIqH,GACN,0BAAMtG,UAAWR,EAAQ+N,WACrB,kBAACoC,GAAA,EAAD,CACItP,QAAQ,WACRC,GAAG,OACHsP,MAAM,kFACNzR,MAAM,YACN+L,MAAO/F,EACPkG,SAAU,SAAC5D,GAAD,OAAWuI,EAAQvI,EAAM7H,OAAOsL,QAC1C2F,MAA6B,MAAtBV,EAAO9P,IAAI,QAClByQ,WAAkC,MAAtBX,EAAO9P,IAAI,QAAkB8P,EAAO9P,IAAI,QAAQ0Q,QAAU,GACtEC,UAAQ,IAEZ,kBAACL,GAAA,EAAD,CACItP,QAAQ,WACRC,GAAG,eACHsP,MAAM,kFACNzR,MAAM,YACN8R,WAAY,CAACC,eAAgBpC,GAC7B5D,MAAO3I,EACP8I,SAAU,SAAC5D,GAAD,OAAWwI,EAAexI,EAAM7H,OAAOsL,QACjD2F,MAAqC,MAA9BV,EAAO9P,IAAI,gBAClByQ,WAA0C,MAA9BX,EAAO9P,IAAI,gBAA0B8P,EAAO9P,IAAI,gBAAgB0Q,QAAU,GACtFC,UAAQ,IAEZ,kBAACL,GAAA,EAAD,CACItP,QAAQ,WACRC,GAAG,QACHsP,MAAM,QACNzR,MAAM,YACN+L,MAAO1I,EACP6I,SAAU,SAAC5D,GAAD,OAAWyI,EAASzI,EAAM7H,OAAOsL,QAC3C2F,MAA8B,MAAvBV,EAAO9P,IAAI,SAClByQ,WAAmC,MAAvBX,EAAO9P,IAAI,SAAmB8P,EAAO9P,IAAI,SAAS0Q,QAAU,GACxEC,UAAQ,IAEZ,kBAAC9P,EAAA,EAAD,CACIC,QAhEC,SAAAsG,GACjBvC,GAAYC,EAAM5C,EAAY4O,QAAQ,UAAW,IAAK3O,GACjD4O,MAAK,WACFzC,IACAlO,EAAQI,KAAK,QAGhBwQ,OAAM,SAAAR,GAC0B,MAA1BA,EAAMS,SAASC,QACd9Q,EAAQI,KAAK,UAEjBuP,EAAU3H,iBAAOoI,EAAMS,SAAShN,WAsDxBjD,QAAQ,WACRiK,KAAK,SACLnM,MAAM,WAJV,2EAoDY,gBCtOvBqS,GAAY,uCAAG,WAAOlN,GAAP,eAAAF,EAAA,sEACNP,GAAIxD,IZEY,mBYHV,cAClBgE,EADkB,yBAEjBA,EAAIC,MAFa,2CAAH,sDCErBe,GAAeC,cAAI,CACnBmM,aAAa,EACbrR,MAAO,KACPsR,SAAU,KACVC,aAAc,KACdC,QAAS,OAGPC,GAAoB,SAACzR,EAAOsR,EAAUC,EAAcC,GAAhC,MAA6C,CACnEhM,KAXe,aAYfC,QAAS,CAAEzF,QAAOsR,WAAUC,eAAcC,aAmB/BE,GAVS,WAAmC,IAAlC3R,EAAiC,uDAAzBkF,GAAcqB,EAAW,uCACtD,OAAQA,EAAOd,MACX,IAvBW,aAwBP,OAAOzF,EAAMqI,MAAMC,iBAAO,gBAAK/B,EAAOb,QAAb,CAAsB4L,aAAa,MAEhE,QACI,OAAOtR,ICvBfkF,GAAeC,cAAI,CACnBhF,cAAe,KACfkF,MAAO4C,mBAGL2J,GAAyB,SAAAzR,GAAa,MAAK,CAC7CsF,KARuB,qBASvBC,QAAS,CAAEvF,mBAGT0R,GAAsB,SAAAxM,GAAK,MAAK,CAClCI,KAfmB,iBAgBnBC,QAAS,CAAEL,WAuBAyM,GAbW,WAAmC,IAAlC9R,EAAiC,uDAAzBkF,GAAcqB,EAAW,uCACxD,OAAQA,EAAOd,MACX,IA5Be,iBA+Bf,IA7BmB,qBA8Bf,OAAOzF,EAAMqI,MAAMC,iBAAO,gBAAK/B,EAAOb,WAE1C,QACI,OAAO1F,I,UClCb3B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCwT,QAAS,CACLhQ,UAAW,UACXsJ,SAAU,WACVE,IAAK,MACLD,KAAM,WAWC0G,GAPG,WAEd,IAAM3R,EAAUhC,KAEhB,OAAO,kBAAC4T,GAAA,EAAD,CAAkBC,eAAa,EAACrR,UAAWR,EAAQ0R,WCDxDxT,GAAQ4T,YAAe,CACzBzJ,QAAS,CACL0J,QAAS,CACLxJ,KAAM/G,IAAK,OAGnBwQ,WAAY,CACRvG,WAAY,sBACZE,cAAe,SAIjB3N,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnC+T,YAAa,CACT3T,QAAS,OACToD,UAAW,sBACXuL,KAAM,WACNa,eAAgB,SAChBH,UAAW,YA4CJjO,gBANS,SAAAC,GACpB,MAAQ,CACJsR,YAAatR,EAAME,IAAI,UAAUA,IAAI,kBAIL,CAAEqS,YH5Df,yDAAM,WAAMpM,GAAN,uBAAAlC,EAAA,sEACNoN,KADM,OACzBmB,EADyB,OAEvBvS,EAA2CuS,EAA3CvS,MAAOsR,EAAoCiB,EAApCjB,SAAUC,EAA0BgB,EAA1BhB,aAAcC,EAAYe,EAAZf,QACrCtL,EAASuL,GAAkBzR,EAAOsR,EAAUC,EAAcC,IAH7B,2CAAN,uDG4D4BgB,cFxD1B,yDAAM,WAAMtM,GAAN,iBAAAlC,EAAA,sEACXD,KADW,OACzBqB,EADyB,OAEzBlF,EAAgBkF,EAAM,GAC5Bc,EAAS0L,GAAoBxM,IAC7Bc,EAASyL,GAAuBzR,IAJD,2CAAN,uDEwDyCuS,YblC3C,yDAAM,WAAMvM,GAAN,eAAAlC,EAAA,sEACNM,KADM,OACvBsB,EADuB,OAE7BK,GAAQC,EAAUN,GAFW,2CAAN,wDakCZ9F,EAxCH,SAAC,GAA8D,IAA5DuR,EAA2D,EAA3DA,YAAaiB,EAA8C,EAA9CA,YAAaE,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAE9CrS,EAAUhC,KAEhB,OAAKiT,EAQD,kBAAC,IAAM3Q,SAAP,KACI,kBAACgS,EAAA,EAAD,CAAepU,MAAOA,IAClB,kBAAC,EAAD,MACA,yBAAKsC,UAAWR,EAAQiS,aACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAI3I,UAAW4I,KACjC,kBAAC,IAAD,CAAOD,KAAK,uBAAuB3I,UAAW6I,KAC9C,kBAAC,IAAD,CAAOF,KAAK,QAAQ3I,UAAW8I,KAC/B,kBAAC,IAAD,CAAOH,KAAK,SACLI,OAAQ,kBAAM,kBAAC,GAAD,CAAOlM,KAAK,qHAA2BsF,KAAM,SAElE,kBAAC,IAAD,CAAOwG,KAAK,IACLI,OAAQ,kBAAM,kBAAC,GAAD,CAAOlM,KAAK,+HAA2BsF,KAAM,WAI1E,kBAAC,EAAD,SAvBRoG,IACAC,IACAH,IACO,kBAACI,EAAA,EAAD,CAAepU,MAAOA,IAAO,kBAAC,GAAD,W,sCCtCxC2U,GAAcC,2BAAgB,CAC9BC,OAAQzB,GACR9E,WAAYiF,GACZ9G,SAAU5C,GACViL,KAAM/M,KAGGgN,GAAQC,aAAYL,GAAaM,aAAQC,aAAgBC,QCHlDC,QACW,cAA7B9V,OAAOC,SAAS8V,UAEe,UAA7B/V,OAAOC,SAAS8V,UAEhB/V,OAAOC,SAAS8V,SAAS7G,MACvB,2DCTN8G,IAASZ,OACL,kBAAC,IAAD,CAAUK,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGRQ,SAASC,eAAe,SDoHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdlD,OAAM,SAAAR,GACL2D,QAAQ3D,MAAMA,EAAM4D,c","file":"static/js/main.95f18302.chunk.js","sourcesContent":["const DEV_DEFAULT_IMAGE = 'http://localhost:8000/static/img/default.png'\n\nconst PROD_DEFAULT_IMAGE = `${window.location.origin}/static/img/default.png`\n\nexport const DEFAULT_IMAGE = process.env.NODE_ENV === \"development\" ? DEV_DEFAULT_IMAGE : PROD_DEFAULT_IMAGE\n\nexport const PRODUCTS_PER_PAGE = 16\n\nexport const CART_MAX_TOTAL_PRICE = 999999999","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Badge from \"@material-ui/core/Badge\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useHistory } from \"react-router-dom\"\nimport { AppBar, IconButton } from \"@material-ui/core\"\nimport { Typography } from \"@material-ui/core\"\nimport { Toolbar } from \"@material-ui/core\"\nimport { Button } from \"@material-ui/core\"\nimport Slide from \"@material-ui/core/Slide\"\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\"\nimport ShoppingCartSharpIcon from \"@material-ui/icons/ShoppingCartSharp\"\nimport { CART_MAX_TOTAL_PRICE } from \"../../constants/shop\"\n\nconst currencyFormatter = new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' })\n\nconst useStyles = makeStyles(theme => ({\n    headerWrapper: {\n        paddingRight: '10px'\n    },\n    toolBar: {\n        display: 'flex',\n        justify: 'spaceBetween',\n    },\n    titleWrapper: {\n        flexGrow: 1,\n    },\n    titleButton: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '1.5em'\n    },\n    navButton: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n    },\n    cartIcon: {\n        color: 'white',\n        fontSize: '1.2em'\n    }\n}))\n\nconst HideOnScroll = ({ children, window }) => {\n\n    const trigger = useScrollTrigger({ target: window ? window() : undefined })\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            {children}\n        </Slide>\n    )\n}\n\nconst Header = ({ title, firstCategory, cartTotalPrice }) => {\n\n    const classes = useStyles()\n\n    const history = useHistory()\n\n    const routeHandler = url => history.push(url)\n\n    const Title = ({ title }) => (\n        <div className={classes.titleWrapper}>\n            <Button\n                className={classes.titleButton}\n                onClick={() => routeHandler(\"/\")}>\n                <Typography variant=\"h6\">\n                    {title}\n                </Typography>\n            </Button>\n        </div>\n    )\n\n    const ShopButton = ({ firstCategory }) => {\n        if (firstCategory) {\n\n            const id = firstCategory.get('id')\n\n            const url = `/shop/categories/${id}`\n\n            return (\n                <React.Fragment>\n                    <Button\n                        className={classes.navButton}\n                        onClick={() => routeHandler(url)}>\n                        <Typography>\n                            Магазин\n                        </Typography>\n                    </Button>\n                </React.Fragment>\n            )\n        }\n        return null\n    }\n\n    const CartIcon = ({ firstCategory, cartTotalPrice }) => {\n        if (firstCategory) {\n            return (\n                <IconButton \n                    onClick={() => routeHandler('/cart')}\n                    disabled={cartTotalPrice === 0 ? true : false}\n                >\n                    <Badge\n                        badgeContent={currencyFormatter.format(cartTotalPrice)}\n                        color=\"secondary\"\n                        max={CART_MAX_TOTAL_PRICE}\n                        showZero\n                    >\n                        <ShoppingCartSharpIcon className={classes.cartIcon} />\n                    </Badge>\n                </IconButton>\n            )\n        }\n        return null\n    }\n\n    return (\n        <React.Fragment>\n            <HideOnScroll>\n                <AppBar className={classes.headerWrapper}>\n                    <Toolbar className={classes.toolBar}>\n                        <Title title={title} />\n                        <ShopButton firstCategory={firstCategory} />\n                        <CartIcon\n                            firstCategory={firstCategory}\n                            cartTotalPrice={cartTotalPrice}\n                        />\n                    </Toolbar>\n                </AppBar >\n            </HideOnScroll>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        title: state.get('config').get('title'),\n        firstCategory: state.get('categories').get('firstCategory'),\n        cartTotalPrice: state.get('cart').get('totalPrice')\n    }\n}\n\nexport default connect(mapStateToProps)(Header)","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Typography from \"@material-ui/core/Typography\"\nimport grey from \"@material-ui/core/colors/grey\"\nimport PhoneIcon from \"@vkontakte/icons/dist/28/phone_outline\"\nimport VkIcon from \"@vkontakte/icons/dist/28/logo_vk_outline\"\nimport EMailIcon from \"@vkontakte/icons/dist/28/mail_outline\"\nimport InstagramIcon from \"@vkontakte/icons/dist/28/logo_instagram\"\n\nconst useStyles = makeStyles(theme => ({\n    stickToBottom: {\n        backgroundColor: grey[100],\n        textAlign: 'center',\n        minHeight: '19px',\n        padding: '17px',\n        flexShrink: 0\n    },\n    footerItem: {\n        margin: '5px',\n    }\n}))\n\nconst Footer = ({ phoneNumber, email, instagram, vk }) => {\n\n    const classes = useStyles()\n\n    const VkButton = () => {\n        if (vk !== \"\") {\n            return (\n            <IconButton \n                color=\"inherit\"\n                onClick={() => window.location.href = vk}\n            >\n                <VkIcon width={30} height={30}/>\n            </IconButton>\n            )\n        }\n        return null\n    }\n\n    const InstagramButton = () => {\n        if (instagram !== \"\") {\n            return (\n            <IconButton \n                color=\"inherit\"\n                onClick={() => window.location.href = instagram}\n            >\n                <InstagramIcon width={30} height={30}/>\n            </IconButton>\n            )\n        }\n        return null\n    }\n\n    return (\n        <footer className={classes.stickToBottom}>\n            <Grid\n                container\n                direction=\"column\"\n                alignItems=\"center\"\n            >\n                <Grid \n                    container \n                    direction=\"row\"\n                    justify=\"center\"\n                    className={classes.footerItem}\n                >\n                    <PhoneIcon />\n                    <Typography style={{paddingLeft: '5px'}}>\n                        {phoneNumber}\n                    </Typography>\n                </Grid>\n                <Grid \n                    container \n                    direction=\"row\" \n                    justify=\"center\"\n                    className={classes.footerItem}\n                >\n                    <EMailIcon />\n                    <Typography style={{paddingLeft: '5px'}}>\n                        {email}\n                    </Typography>\n                </Grid>\n                <Grid \n                    container \n                    direction=\"row\" \n                    justify=\"center\"\n                >   \n                    <VkButton/>\n                    <InstagramButton/>\n                </Grid>\n            </Grid>\n        </footer>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        phoneNumber: state.get('config').get('contact_info').get('phone_number'),\n        email: state.get('config').get('contact_info').get('email'),\n        instagram: state.get('config').get('contact_info').get('instagram'),\n        vk: state.get('config').get('contact_info').get('vk')\n    })\n}\n\nexport default connect(mapStateToProps)(Footer)","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Carousel from \"react-responsive-carousel/lib/components/Carousel\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\nconst useStyles = makeStyles(theme => ({\n    imageContainer: {\n        height: '100%'\n    }\n}))\n\nconst ContentCarousel = ({ firstImage, secondImage }) => {\n\n    const classes = useStyles()\n\n    return (\n        <Carousel\n            autoPlay={true}\n            infiniteLoop={true}\n            showThumbs={false}\n            showStatus={false}\n            interval={7000}\n        >\n            <div className={classes.imageContainer}>\n                <img src={firstImage} alt=\"\"/>\n            </div>\n            <div className={classes.imageContainer}>\n                <img src={secondImage} alt =\"\"/>\n            </div>\n        </Carousel>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        firstImage: state.get('config').get('carousel').get('first_image'),\n        secondImage: state.get('config').get('carousel').get('second_image'),\n    }\n}\n\nexport default connect(mapStateToProps)(ContentCarousel)","const DEV_API_URL = 'http://localhost:8000/api/'\n\nconst PROD_API_URL = `${window.location.origin}/api/`\n\nexport const BASE_API_URL = process.env.NODE_ENV === \"development\" ? DEV_API_URL : PROD_API_URL\n\nexport const ACTIVE_CONFIG_ENDPOINT = 'configs/active/'\n\nexport const CATEGORIES_ENDPOINT = 'categories/'\n\nexport const CART_ENDPOINT = 'cart/'\n\nexport const RELATED_PRODUCTS = '/products/'\n\nexport const PAGE = '?page='\n\nexport const CREATE_ORDER = 'create_order/'","import axios from \"axios\"\nimport { BASE_API_URL } from \"../../constants/api\"\n\nexport const API = axios.create({\n    baseURL: BASE_API_URL,\n    withCredentials: true,\n    responseType: \"json\"\n  })","import { API } from \"./base\"\nimport { CATEGORIES_ENDPOINT, RELATED_PRODUCTS, PAGE, CART_ENDPOINT, CREATE_ORDER } from \"../../constants/api\"\n\nexport const loadCategories = async () => {\n    const res = await API.get(CATEGORIES_ENDPOINT)\n    return res.data\n}\n\nexport const loadProducts = async (categoryId, page) => {\n    const url = `${CATEGORIES_ENDPOINT}${categoryId}${RELATED_PRODUCTS}${PAGE}${page}`\n    const res = await API.get(url)\n    return res.data\n}\n\nexport const loadCart = async () => {\n    const res = await API.get(CART_ENDPOINT)\n    return res.data\n}\n\nexport const addToCart = async (productId, count) => {\n    const res = await API.post(CART_ENDPOINT, { product: productId, count })\n    return res.data\n}\n\nexport const deleteProductInCart = async id => await API.delete(`${CART_ENDPOINT}${id}/`)\n\nexport const createOrder = async(name, phoneNumber, email) => {\n    const url = `${CART_ENDPOINT}${CREATE_ORDER}`\n    const res = await API.post(url, { name, phone_number: phoneNumber, email })\n    return res.data\n}","import { Map } from \"immutable\"\nimport { addToCart, deleteProductInCart, loadCart } from \"../../services/api/shop\"\n\nconst ADD_TO_CART = 'ADD_TO_CART'\n\nconst DELETE_ITEM = 'DELETE_ITEM'\n\nconst CLEAR_CART = 'CLEAR_CART'\n\nconst CREATE_ORDER = 'CREATE_ORDER'\n\nlet initialState = Map({\n    totalPrice: 0,\n    items: Map(),\n    orderCreated: false\n})\n\nconst addToCartAction = item => ({\n    type: ADD_TO_CART,\n    payload: item\n})\n\nconst deleteProductAction = productId => ({\n    type: DELETE_ITEM,\n    payload: productId\n})\n\nconst clearCartAction = () => ({\n    type: CLEAR_CART\n})\n\nconst createOrderAction = () => ({\n    type: CREATE_ORDER\n})\n\nconst getTotalPrice = cartData => {\n    return cartData.reduce(\n        (total, item) => parseFloat(total + (item.count * item.price)),\n        initialState.get('totalPrice')\n    )\n}\n\nconst addMany = (dispatch, cartData) => cartData.map(item => dispatch(addToCartAction(item)))\n\nexport const getCartData = () => async dispatch => {\n    const cartData = await loadCart()\n    addMany(dispatch, cartData)\n}\n\nexport const addCartItem = (productId, count) => async dispatch => {\n    const item = await addToCart(productId, count)\n    dispatch(addToCartAction(item))\n}\n\nexport const deleteCartItem = productId => async dispatch => {\n    await deleteProductInCart(productId)\n    dispatch(deleteProductAction(productId))\n}\n\nexport const clearCart = () => async dispatch => dispatch(clearCartAction())\n\nexport const setOrderCreated = () => async dispatch => dispatch(createOrderAction())\n\nconst cartReducer = (state = initialState, action) => {    \n    switch (action.type) {\n        case ADD_TO_CART:\n            const item = action.payload\n            state = state.setIn(\n                ['items' , item.product], {\n                    id: item.id,\n                    title: item.title,\n                    price: parseFloat(item.price),\n                    image: item.image,\n                    count: item.count\n                }\n            )\n            return state.setIn(['totalPrice'], getTotalPrice(state.get('items')))\n\n        case DELETE_ITEM:\n            state = state.deleteIn(['items', action.payload])\n            return state.setIn(['totalPrice'], getTotalPrice(state.get('items')))\n\n        case CLEAR_CART:\n            return initialState\n\n        case CREATE_ORDER:\n            return state.set('orderCreated', true)\n            \n        default:\n            return state\n    }\n}\n\nexport default cartReducer","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport ContentCarousel from \"../Carousel/Carousel\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport MuiAlert from \"@material-ui/lab/Alert\"\nimport { clearCart } from \"../../redux/reducers/cart-reducer\"\n\nconst useStyles = makeStyles(theme => ({\n    contentWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: '8px'\n    },\n    successOrder: {\n        width: '100%'\n    }\n}))\n\nconst Content = ({ text, orderCreated, clearCart }) => {\n\n    const classes = useStyles()\n\n    const [open, setOpen] = React.useState(false)\n\n    const handleClose = (event, reason) => {\n        if (!(reason === 'clickaway')) {\n            setOpen(false)\n        }\n    }\n\n    if (orderCreated && !(open)) {\n        clearCart()\n        setOpen(true)\n    }\n\n    const Alert = props => (\n        <MuiAlert \n            elevation={6} \n            variant=\"filled\" \n            className={classes.successOrder}\n            {...props}\n        />\n    )\n\n    return (\n        <React.Fragment>\n            <div className={classes.contentWrapper}>\n                <ContentCarousel />\n                <div dangerouslySetInnerHTML={{ __html: text }}></div>\n            </div>\n            <Snackbar \n                open={open} \n                onClose={handleClose}\n                autoHideDuration={8000}\n            >\n                <Alert  \n                    onClose={handleClose} \n                    severity=\"success\"\n                >\n                    Ваш заказ успешно обработан\n                </Alert>\n            </Snackbar>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        text: state.get('config').get('content').get('text'),\n        orderCreated: state.get('cart').get('orderCreated')\n    })\n}\n\nexport default connect(mapStateToProps, { clearCart })(Content)","import { Map, List, fromJS } from \"immutable\"\nimport { loadProducts } from \"../../services/api/shop\"\n\nconst SET_PRODUCTS = 'SET_PRODUCTS'\n\nlet initialState = Map({\n    count: 0,\n    page: 1,\n    results: List()\n})\n\nconst setProductsAction = (count, results, page) => ({\n    type: SET_PRODUCTS,\n    payload: { count, results, page }\n})\n\nexport const fetchProducts = (categoryId, page) => async dispatch => {\n    const { count, results } = await loadProducts(categoryId, page)\n    dispatch(setProductsAction(count, results, page))\n}\n\nconst productsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_PRODUCTS:\n            return state.merge(fromJS({ ...action.payload }))\n\n        default:\n            return state\n    }\n}\n\nexport default productsReducer","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Tooltip } from \"@material-ui/core\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Pagination from \"@material-ui/lab/Pagination\"\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\"\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\"\nimport { DEFAULT_IMAGE, PRODUCTS_PER_PAGE } from \"../../constants/shop\"\nimport { fetchProducts } from \"../../redux/reducers/products-reducer\"\nimport { addCartItem } from \"../../redux/reducers/cart-reducer\"\n\nconst currencyFormatter = new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' })\n\nconst useStyles = makeStyles(theme => ({\n    product: {\n        margin: '35px',\n        boxShadow: '0 0 0px'\n    },\n    image: {\n        paddingTop: '100%'\n    },\n    addCartButton: {\n        margin: '5px',\n        '&:disabled': {\n            color: theme.palette.secondary.main\n        },\n        width: 'max-content'\n    },\n    descriptionButton: {\n        margin: '5px',\n        width: 'max-content'\n    },\n    pagination: {\n        padding: '25px'\n    },\n    icon: {\n        padding: '5px',\n        fontSize: '30px'\n    }\n}))\n\nconst ProductIcons = ({ isRecommend, isTop }) => {\n\n    const classes = useStyles()\n\n    const IsRecommend = () => {\n        if (isRecommend) {\n            return (\n                <Tooltip className={classes.icon} title=\"Рекомендовано\">\n                    <ThumbUpAltOutlinedIcon />\n                </Tooltip>\n            )\n        }\n        return null\n    }\n\n    const IsTop = () => {\n        if (isTop) {\n            return (\n                <Tooltip className={classes.icon} title=\"Топ\">\n                    <StarBorderOutlinedIcon />\n                </Tooltip>\n            )\n        }\n        return null\n    }\n\n    return (\n        <Typography>\n            <IsRecommend />\n            <IsTop />\n        </Typography>\n    )\n}\n\nconst Product = ({\n    productId,\n    title,\n    isRecommend,\n    isTop,\n    price,\n    description,\n    image,\n    addCartItem,\n    cartItems\n}) => {\n\n    const classes = useStyles()\n\n    const [expanded, setExpanded] = React.useState(false)\n\n    const inCart = cartItems.get(productId) ? true : false\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Grid item lg={3} md={6} sm={10} xs={10}>\n            <Card className={classes.product}>\n                <CardMedia\n                    className={classes.image}\n                    image={!(image) ? DEFAULT_IMAGE : image}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {title}\n                    </Typography>\n                    <Typography component=\"p\">\n                        <h2>{currencyFormatter.format(price)}</h2>\n                    </Typography>\n                    <Typography>\n                        <ProductIcons isRecommend={isRecommend} isTop={isTop} />\n                    </Typography>\n                </CardContent>\n                <Grid \n                    container \n                    direction=\"row\" \n                    justify=\"flex-end\"\n                >\n                    <CardActions>\n                        <Button\n                            className={classes.descriptionButton}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            disabled={description === \"\" ? true : false}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        >\n                            <Typography>\n                                Описание\n                        </Typography>\n                        </Button>\n                        <Button\n                            className={classes.addCartButton}\n                            onClick={() => addCartItem(productId, 1)}\n                            disabled={inCart ? true : false}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        >\n                            <Typography>\n                                {inCart ? \"В корзине\" : \"В корзину\"}\n                            </Typography>\n                        </Button>\n                    </CardActions>\n                </Grid>\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <Typography paragraph>\n                            {description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </Grid >\n    )\n}\n\nconst ProductsList = ({\n    results,\n    categoryId,\n    fetchProducts,\n    addCartItem,\n    productCount,\n    currentPage,\n    cartItems\n}) => {\n\n    const classes = useStyles()\n\n    const pagesCount = Math.ceil(productCount / PRODUCTS_PER_PAGE)\n\n    const pageChange = (event, value) => {\n        if (!(value === currentPage)) {\n            fetchProducts(categoryId, value)\n        }\n    }\n\n    const ProductsPagination = () => {\n        if (pagesCount > 1) {\n            return (\n                <Pagination\n                    className={classes.pagination}\n                    count={pagesCount}\n                    page={currentPage}\n                    onChange={pageChange}\n                    color=\"primary\"\n                    size=\"large\"\n                />\n            )\n        }\n        return null\n    }\n\n    const products = results.map(\n        product => (\n            <Product\n                productId={product.get('id')}\n                title={product.get('title')}\n                isRecommend={product.get('is_recommend')}\n                isTop={product.get('is_top')}\n                price={product.get('price')}\n                description={product.get('description')}\n                image={product.get('image')}\n                addCartItem={addCartItem}\n                cartItems={cartItems}\n            />\n        )\n    )\n\n    return (\n        <React.Fragment>\n            {products}\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n            >\n                <ProductsPagination />\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        results: state.get('products').get('results'),\n        productCount: state.get('products').get('count'),\n        currentPage: state.get('products').get('page'),\n        cartItems: state.get('cart').get('items')\n    })\n}\n\nexport default connect(mapStateToProps, { fetchProducts, addCartItem })(ProductsList)","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n    ErrorWrapper: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        maxWidth: '520px',\n        width: '100%',\n        lineHeight: '1.4',\n        textAlign: 'center',\n        paddingBottom: '220px',\n        paddingLeft: '10px'\n    },\n    Error: {\n        position: 'relative',\n        height: '240px',\n    },\n    ErrorH1: {\n        fontFamily: \"'Montserrat', sans-serif\",\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        fontSize: '252px',\n        fontWeight: 900,\n        margin: '0px',\n        color: '#262626',\n        textTransform: 'uppercase',\n        letterSpacing: '-40px',\n        marginLeft: '-20px',\n        '& > span': {\n            textShadow: '-8px 0px 0px #fff'\n        }\n    },\n    ErrorH3: {\n        fontFamily: \"'Cabin', sans-serif\",\n        position: 'relative',\n        fontSize: '16px',\n        fontWeight: 700,\n        textTransform: 'uppercase',\n        color: '#262626',\n        margin: '0px',\n        letterSpacing: '3px'\n    }\n\n}))\n\nconst Error = ({ text, code }) => {\n\n    const prettyCode = (\"\"+code).split(\"\").map(char => <span>{char}</span>)\n    \n    const classes = useStyles()\n\n    return (\n        <div className={classes.ErrorWrapper}>\n            <div className={classes.Error}>\n                <h3 className={classes.ErrorH3}>\n                    {text}\n                </h3>\n                <h1 className={classes.ErrorH1}>\n                    {prettyCode}\n                </h1>\n            </div>\n        </div>\n    )\n}\n\nexport default Error","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Fab from \"@material-ui/core/Fab\"\n\nconst useStyles = makeStyles(theme => ({\n    categoryItem: {\n        margin: '8px'\n    }\n}))\n\nconst CategoryItem = ({ id, title, currentCategory }) => {\n    \n    const isCurrent = +currentCategory === +id\n\n    const classes = useStyles()\n\n    const history = useHistory()\n\n    const routeHandler = url => history.push(url)\n\n    return  (\n        <Fab variant=\"extended\"\n             size=\"medium\"\n             color={isCurrent ? 'secondary' : 'default'}\n             className={classes.categoryItem}\n             onClick={() => routeHandler(`/shop/categories/${id}`)}\n             >\n            {title}\n        </Fab>\n        )\n}\n\nconst CategoriesList = ({ currentCategory, items }) => {\n    const categories = items.map(\n        category => (\n            <CategoryItem \n                id={category.get('id')} \n                title={category.get('title')}\n                currentCategory={currentCategory}\n            />\n            )\n        )\n    return <React.Fragment>{categories}</React.Fragment>\n}\n\nconst mapStateToProps = state => {\n    return ({\n        items: state.get('categories').get('items')\n    })\n}\n\nexport default connect(mapStateToProps)(CategoriesList)","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport Grid from \"@material-ui/core/Grid\"\nimport ProductsList from \"./Products\"\nimport Error from \"../Errors/Error\"\nimport CategoriesList from \"./Categories\"\nimport { fetchProducts } from \"../../redux/reducers/products-reducer\"\n\nconst Shop = ({ match, fetchProducts, categories }) => {\n\n    const categoryId = match.params.id\n\n    const categoriesIdList = categories.map(item => item.get('id'))\n\n    const notExistCategory = !(categoriesIdList.includes(+categoryId))\n\n    if (notExistCategory) {\n        return <Error text=\"Упс! Страница не найдена\" code={404} />\n    }\n\n    fetchProducts(categoryId, 1)\n\n    return (\n        <Grid \n            container \n            direction=\"column\" \n            alignItems=\"flex-start\"\n        >\n            <Grid container direction=\"row\" justify=\"flex-start\">\n                <CategoriesList currentCategory={categoryId} />\n            </Grid>\n            <Grid container direction=\"row\" justify=\"center\">\n                <ProductsList categoryId={categoryId} />\n            </Grid>\n        </Grid>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        categories: state.get('categories').get('items')\n    })\n}\n\nexport default connect(mapStateToProps, { fetchProducts })(Shop)","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { IconButton, Typography } from \"@material-ui/core\"\nimport Button from \"@material-ui/core/Button\"\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport DeleteForeverOutlinedIcon from \"@material-ui/icons/DeleteForeverOutlined\"\nimport { deleteCartItem, addCartItem } from \"../../redux/reducers/cart-reducer\"\nimport { DEFAULT_IMAGE } from \"../../constants/shop\"\n\nconst currencyFormatter = new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' })\n\nconst useStyles = makeStyles(theme => ({\n    counter: {\n        '&:disabled': {\n            color: theme.palette.grey[900]\n        },\n        minWidth: 50\n    },\n    image: {\n        flex: 1,\n        width: 50,\n        height: 50,\n        resizeMode: 'contain'\n    },\n    priceCell: {\n        minWidth: 100, \n        maxWidth: 100\n    }\n}))\n\nconst CartItemCounter = ({ count, productId, addCartItem, deleteCartItem }) => {\n\n    const classes = useStyles()\n\n    const handleIncrement = () => {\n        addCartItem(productId, ++count)\n    }\n\n    const handleDecrement = () => {\n        if (count > 1) {\n            addCartItem(productId, --count)\n        } else {\n            deleteCartItem(productId)\n        }\n    }\n\n    return (\n        <ButtonGroup>\n            <Button onClick={handleDecrement}>-</Button>\n            <Button className={classes.counter} disabled>{count}</Button>\n            <Button onClick={handleIncrement}>+</Button>\n        </ButtonGroup>\n    )\n\n}\n\nconst CartItem = ({ item, productId, addCartItem, deleteCartItem }) => {\n\n    const classes = useStyles()\n\n    const image = (!item.image) ? DEFAULT_IMAGE : item.image\n\n    return (\n        <TableRow key={productId}>\n            <TableCell>\n                <img src={image} alt=\"\" className={classes.image} />\n            </TableCell>\n            <TableCell>\n                <Typography>\n                    {item.title}\n                </Typography>\n            </TableCell>\n            <TableCell className={classes.priceCell}>\n                    {currencyFormatter.format(item.price)}\n            </TableCell>\n            <TableCell>\n                <CartItemCounter\n                    count={item.count}\n                    productId={productId}\n                    addCartItem={addCartItem}\n                    deleteCartItem={deleteCartItem}\n                />\n            </TableCell>\n            <TableCell className={classes.priceCell}>\n                {currencyFormatter.format(item.price * item.count)}\n            </TableCell>\n            <TableCell>\n                <IconButton onClick={() => deleteCartItem(productId)}>\n                    <DeleteForeverOutlinedIcon fontSize=\"large\" color=\"primary\"/>\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    )\n}\n\nexport default connect(null, { addCartItem, deleteCartItem })(CartItem)","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Map, fromJS } from \"immutable\"\nimport { connect } from \"react-redux\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Typography } from \"@material-ui/core\"\nimport MaskedInput from \"react-text-mask\"\nimport Modal from \"@material-ui/core/Modal\"\nimport Backdrop from \"@material-ui/core/Backdrop\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport TableFooter from \"@material-ui/core/TableFooter\"\nimport TextField from \"@material-ui/core/TextField\"\nimport CartItem from \"./CartItem\"\nimport { createOrder } from \"../../services/api/shop\"\nimport { setOrderCreated } from \"../../redux/reducers/cart-reducer\"\n\nconst currencyFormatter = new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' })\n\nconst useStyles = makeStyles(theme => ({\n    cartContainer: {\n        marginTop: '80px',\n        marginBottom: '80px',\n        padding: '5px',\n    },\n    orderModal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    orderForm: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(2, 4, 3),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& > div': {\n            margin: '10px'\n        },\n        '& > button': {\n            margin: '10px'\n        }\n    }\n}))\n\nconst Cart = ({ items, totalPrice, setOrderCreated }) => {\n\n    const history = useHistory()\n\n    if (totalPrice === 0) {\n        history.push('/')\n    }\n\n    const classes = useStyles()\n\n    const [open, setOpen] = React.useState(false)\n\n    const handleOpenOrderForm = () => setOpen(true)\n\n    const handleCloseOrderForm = () => setOpen(false)\n\n    const OrderButton = ({ totalPrice }) => {\n        if (totalPrice > 0) {\n            return (\n                <Button\n                    variant=\"outlined\"\n                    size=\"medium\"\n                    color=\"primary\"\n                    onClick={handleOpenOrderForm}\n                >\n                    Заказать\n                </Button>\n            )\n        }\n        return null\n    }\n\n    const PhoneMask = (props) => {\n\n        const { inputRef, ...other } = props\n      \n        return (\n          <MaskedInput\n            {...other}\n            ref={(ref) => {\n              inputRef(ref ? ref.inputElement : null)\n            }}\n            mask={\n                ['+', /[1-9]/, '(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/]\n            }\n            placeholderChar={'\\u2000'}\n            showMask\n          />\n        )\n      }\n\n    const OrderForm = () => {\n\n        const [name, setName] = React.useState('')\n\n        const [phoneNumber, setPhoneNumber] = React.useState('+7(999)999-99-99')\n\n        const [email, setEmail] = React.useState('')\n\n        const [errors, setErrors] = React.useState(Map({\n            name: null,\n            phone_number: null,\n            email: null\n        }))\n\n        const handleSubmit = event => {\n            createOrder(name, phoneNumber.replace(/[^+\\d]/g, ''), email)\n                .then(() => {\n                    setOrderCreated()\n                    history.push('/')\n                }\n            )\n                .catch(error => {\n                    if(error.response.status !== 400) {\n                        history.push('/error')\n                    }\n                    setErrors(fromJS(error.response.data))\n                }\n            )\n        }\n\n        return (\n            <Modal\n                className={classes.orderModal}\n                open={open}\n                onClose={handleCloseOrderForm}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <form className={classes.orderForm}>\n                        <TextField \n                            variant=\"outlined\"\n                            id=\"name\" \n                            label=\"Имя покупателя\" \n                            color=\"secondary\"\n                            value={name}\n                            onChange={(event) => setName(event.target.value)}\n                            error={errors.get('name') != null}\n                            helperText={errors.get('name') != null ? errors.get('name').first() : ''}\n                            required\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"phone_number\"\n                            label=\"Номер телефона\"\n                            color=\"secondary\"\n                            InputProps={{inputComponent: PhoneMask}}\n                            value={phoneNumber}\n                            onChange={(event) => setPhoneNumber(event.target.value)}\n                            error={errors.get('phone_number') != null}\n                            helperText={errors.get('phone_number') != null ? errors.get('phone_number').first() : ''}\n                            required\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            id=\"email\" \n                            label=\"Email\" \n                            color=\"secondary\"\n                            value={email}\n                            onChange={(event) => setEmail(event.target.value)}\n                            error={errors.get('email') != null}\n                            helperText={errors.get('email') != null ? errors.get('email').first() : ''}\n                            required\n                        />\n                        <Button \n                            onClick={handleSubmit}\n                            variant=\"outlined\"\n                            size=\"medium\"\n                            color=\"primary\"\n                        >\n                            Подтвердить\n                        </Button>\n                    </form>\n                </Fade>\n            </Modal>\n        )\n    }\n\n    const cartItems = items.map((value, key) => <CartItem item={value} productId={key} />)\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                className={classes.cartContainer}\n                direction=\"row\"\n                justify=\"center\"\n            >\n                <Grid item xl={8} md={12} zeroMinWidth>\n                    <TableContainer>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell colSpan={2}>Товар</TableCell>\n                                    <TableCell>Цена</TableCell>\n                                    <TableCell>Количество</TableCell>\n                                    <TableCell>Сумма</TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {[...cartItems.values()]}\n                            </TableBody>\n                            <TableFooter>\n                                <TableCell colSpan={2}>\n                                    <Typography>\n                                        Общая сумма:\n                                </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        {currencyFormatter.format(totalPrice)}\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align=\"right\" colSpan={3}>\n                                    <OrderButton totalPrice={totalPrice} />\n                                    <OrderForm />\n                                </TableCell>\n                            </TableFooter>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        items: state.get('cart').get('items'),\n        totalPrice: state.get('cart').get('totalPrice')\n    }\n}\n\nexport default connect(mapStateToProps, { setOrderCreated })(Cart)","import { API } from \"./base\"\nimport { ACTIVE_CONFIG_ENDPOINT } from \"../../constants/api\"\n\nexport const loadUiConfig = async (data) => {\n    const res = await API.get(ACTIVE_CONFIG_ENDPOINT)\n    return res.data\n}","import { Map, fromJS } from \"immutable\"\nimport { loadUiConfig } from \"../../services/api/uiConfig\"\n\nconst SET_CONFIG = 'SET_CONFIG'\n\nlet initialState = Map({\n    initialized: false,\n    title: null,\n    carousel: null,\n    contact_info: null,\n    content: null\n})\n\nconst setUiConfigAction = (title, carousel, contact_info, content) => ({\n    type: SET_CONFIG,\n    payload: { title, carousel, contact_info, content }\n})\n\nexport const getUiConfig = () => async dispatch => {\n    let configData = await loadUiConfig();\n    let { title, carousel, contact_info, content } = configData;\n    dispatch(setUiConfigAction(title, carousel, contact_info, content));\n}\n\nconst uiConfigReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CONFIG:\n            return state.merge(fromJS({ ...action.payload, initialized: true}))\n\n        default:\n            return state\n    }\n}\n\nexport default uiConfigReducer","import { Map, List, fromJS } from \"immutable\"\nimport { loadCategories } from \"../../services/api/shop\"\n\nconst SET_CATEGORIES = 'SET_CATEGORIES'\n\nconst SET_FIRST_CATEGORY = 'SET_FIRST_CATEGORY'\n\nlet initialState = Map({\n    firstCategory: null,\n    items: List()\n})\n\nconst setFirstCategoryAction = firstCategory => ({\n    type: SET_FIRST_CATEGORY,\n    payload: { firstCategory }\n})\n\nconst setCategoriesAction = items => ({\n    type: SET_CATEGORIES,\n    payload: { items }\n})\n\nexport const getCategories = () => async dispatch => {\n    const items = await loadCategories()\n    const firstCategory = items[0]\n    dispatch(setCategoriesAction(items))\n    dispatch(setFirstCategoryAction(firstCategory))\n}\n\nconst categoriesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CATEGORIES:\n            return state.merge(fromJS({ ...action.payload }))\n\n        case SET_FIRST_CATEGORY:\n            return state.merge(fromJS({ ...action.payload }))\n\n        default:\n            return state\n    }\n}\n\nexport default categoriesReducer","import React from \"react\"\nimport { CircularProgress } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles(theme => ({\n    spinner: {\n        minHeight: 'initial',\n        position: 'absolute',\n        top: '45%',\n        left: '50%'\n    }\n}))\n\nconst Preloader = () => {\n\n    const classes = useStyles()\n\n    return <CircularProgress disableShrink className={classes.spinner} />\n}\n\nexport default Preloader","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Switch, Route } from \"react-router-dom\"\nimport { createMuiTheme, ThemeProvider, makeStyles } from \"@material-ui/core/styles\"\nimport grey from \"@material-ui/core/colors/grey\"\nimport Header from \"./components/Header/Header\"\nimport Footer from \"./components/Footer/Footer\"\nimport Content from \"./components/Content/Content\"\nimport Shop from \"./components/Shop/Shop\"\nimport Cart from \"./components/Cart/Cart\"\nimport { getUiConfig } from \"./redux/reducers/config-reducer\"\nimport { getCategories } from \"./redux/reducers/categories-reducer\"\nimport { getCartData } from \"./redux/reducers/cart-reducer\"\nimport Preloader from \"./components/Preloader/Preloader\"\nimport Error from \"./components/Errors/Error\"\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: grey[900]\n        }\n    },\n    typography: {\n        fontFamily: \"'Cabin', sans-serif\",\n        letterSpacing: '3px'\n    }\n})\n\nconst useStyles = makeStyles(theme => ({\n    mainWrapper: {\n        display: 'flex',\n        minHeight: 'calc(100vh - 245px)',\n        flex: '1 0 auto',\n        justifyContent: 'center',\n        marginTop: '80px'\n    }\n}))\n\nconst App = ({ initialized, getUiConfig, getCategories, getCartData }) => {\n\n    const classes = useStyles()\n\n    if (!initialized) {\n        getCategories()\n        getCartData()\n        getUiConfig()\n        return <ThemeProvider theme={theme}><Preloader /></ThemeProvider>\n    }\n    \n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <Header />\n                <div className={classes.mainWrapper}>\n                    <Switch>\n                        <Route exact path='/' component={Content} />\n                        <Route path='/shop/categories/:id' component={Shop} />\n                        <Route path='/cart' component={Cart} />\n                        <Route path='/error' \n                               render={() => <Error text=\"Упс! Что-то пошло не так\" code={500} />} \n                        />\n                        <Route path='*' \n                               render={() => <Error text=\"Упс! Страница не найдена\" code={404} />}\n                        />\n                    </Switch>\n                </div>\n                <Footer />\n            </ThemeProvider>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return ({\n        initialized: state.get('config').get('initialized')\n    })\n}\n\nexport default connect(mapStateToProps, { getUiConfig, getCategories, getCartData })(App)","import { compose, createStore, applyMiddleware } from \"redux\"\nimport { combineReducers } from \"redux-immutable\"\nimport thunkMiddleware from \"redux-thunk\"\nimport uiConfigReducer from \"./reducers/config-reducer\"\nimport categoriesReducer from \"./reducers/categories-reducer\"\nimport productsReducer from \"./reducers/products-reducer\"\nimport cartReducer from \"./reducers/cart-reducer\"\n\nlet rootReducer = combineReducers({\n    config: uiConfigReducer,\n    categories: categoriesReducer,\n    products: productsReducer,\n    cart: cartReducer\n})\n\nexport const store = createStore(rootReducer, compose(applyMiddleware(thunkMiddleware)))","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport App from \"./App\"\nimport \"./index.css\"\nimport { store } from \"./redux/store\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()"],"sourceRoot":""}